const axios = require('axios');

class SignalValidatorAI {
    constructor(apiKey, logger) {
        this.apiKey = apiKey;
        this.logger = logger;
        this.baseURL = 'https://api.groq.com/openai/v1';
        
        // CONFIGURACI√ìN PARA VALIDACI√ìN DE SE√ëALES
        this.config = {
            MIN_CONFIDENCE: 70,           // M√≠nimo 70% para validar se√±al
            ENABLED: true,                // Habilitado por defecto
            MAX_VALIDATIONS_PER_HOUR: 50  // M√°ximo 50 validaciones por hora
        };
        
        this.validationCount = 0;
        this.lastValidationHour = new Date().getHours();
    }

    // üß† PROMPT ESPECIALIZADO EN VALIDACI√ìN DE SE√ëALES
    getValidationPrompt() {
        return `Eres un EXPERTO VALIDADOR DE SE√ëALES DE TRADING especializado en criptomonedas.

TU MISI√ìN: Analizar se√±ales generadas por SmartMoney y decidir si son oportunidades reales de trading.

CRITERIOS DE VALIDACI√ìN:
1. AN√ÅLISIS T√âCNICO AVANZADO:
   - Confirmar la direcci√≥n de la tendencia en m√∫ltiples timeframes
   - Verificar niveles de soporte/resistencia relevantes
   - Evaluar momentum y volumen para confirmar la se√±al
   - Identificar posibles divergencias o se√±ales contradictorias

2. CONTEXTO DE MERCADO:
   - Condiciones generales del mercado crypto
   - Correlaci√≥n con Bitcoin y mercados principales
   - Volatilidad actual del activo
   - Liquidez y spread del par

3. GESTI√ìN DE RIESGO:
   - Evaluar si el Risk/Reward es favorable (m√≠nimo 1:2)
   - Verificar que los niveles de SL/TP son l√≥gicos
   - Considerar el tama√±o de posici√≥n apropiado
   - Evaluar timing de entrada

4. CONFLUENCIAS:
   - M√∫ltiples indicadores alineados
   - Patrones de precio confirmados
   - Volumen validando el movimiento
   - Ausencia de noticias conflictivas

RESPUESTA REQUERIDA (JSON):
{
  "decision": "BUY" | "SELL" | "NO_TRADE",
  "confidence": 0-100,
  "reasoning": "Explicaci√≥n detallada de la decisi√≥n",
  "risk_assessment": "LOW" | "MEDIUM" | "HIGH",
  "expected_move": "Porcentaje esperado de movimiento",
  "time_horizon": "Tiempo estimado para alcanzar objetivo"
}

IMPORTANTE: 
- Solo valida positivamente se√±ales con 70%+ de confianza
- S√© EXTREMADAMENTE selectivo y conservador
- Prioriza la preservaci√≥n de capital sobre las ganancias
- Si hay dudas, responde NO_TRADE`;
    }

    // üîç VALIDAR SE√ëAL DE SMARTMONEY
    async validateSignal(signalData) {
        try {
            this.logger.info(`üîç VALIDANDO se√±al SmartMoney: ${signalData.symbol} ${signalData.action}`);
            
            // Verificar l√≠mites de validaci√≥n
            const currentHour = new Date().getHours();
            if (currentHour !== this.lastValidationHour) {
                this.validationCount = 0;
                this.lastValidationHour = currentHour;
            }
            
            if (this.validationCount >= this.config.MAX_VALIDATIONS_PER_HOUR) {
                this.logger.warn(`‚ö†Ô∏è L√≠mite de validaciones alcanzado: ${this.validationCount}/${this.config.MAX_VALIDATIONS_PER_HOUR} por hora`);
                return {
                    decision: 'NO_TRADE',
                    confidence: 0,
                    reasoning: 'L√≠mite de validaciones por hora alcanzado'
                };
            }

            const prompt = `${this.getValidationPrompt()}

SE√ëAL SMARTMONEY PARA VALIDAR:
S√≠mbolo: ${signalData.symbol}
Acci√≥n SmartMoney: ${signalData.action}
Confianza SmartMoney: ${signalData.confidence}%
Precio Actual: $${signalData.price}
Volumen 24h: ${signalData.volume}
Cambio 24h: ${signalData.priceChange}%

DATOS T√âCNICOS:
${JSON.stringify(signalData.technicalData || {}, null, 2)}

CONTEXTO ADICIONAL:
- Timestamp: ${new Date().toISOString()}
- Mercado: Binance Futures
- Apalancamiento disponible: 15x
- Tama√±o posici√≥n: $0.40 USD

Analiza esta se√±al SmartMoney y decide si es una oportunidad v√°lida de trading.`;

            const response = await axios.post(`${this.baseURL}/chat/completions`, {
                model: 'llama-3.1-70b-versatile',
                messages: [
                    {
                        role: 'system',
                        content: 'Eres un experto validador de se√±ales de trading. Responde SOLO en formato JSON v√°lido.'
                    },
                    {
                        role: 'user',
                        content: prompt
                    }
                ],
                temperature: 0.2,  // M√°s conservador
                max_tokens: 800
            }, {
                headers: {
                    'Authorization': `Bearer ${this.apiKey}`,
                    'Content-Type': 'application/json'
                }
            });

            const aiResponse = response.data.choices[0].message.content;
            this.logger.info(`ü§ñ Respuesta IA Validadora: ${aiResponse}`);

            // Parsear respuesta JSON
            let validation;
            try {
                validation = JSON.parse(aiResponse);
            } catch (parseError) {
                this.logger.error(`‚ùå Error parseando respuesta IA: ${parseError.message}`);
                return {
                    decision: 'NO_TRADE',
                    confidence: 0,
                    reasoning: 'Error en respuesta de IA'
                };
            }

            // Validar confianza m√≠nima
            if (validation.confidence < this.config.MIN_CONFIDENCE) {
                this.logger.info(`üìä Validaci√≥n: Confianza ${validation.confidence}% < ${this.config.MIN_CONFIDENCE}% - NO TRADE`);
                return {
                    decision: 'NO_TRADE',
                    confidence: validation.confidence,
                    reasoning: 'Confianza insuficiente para validar se√±al'
                };
            }

            this.validationCount++;
            this.logger.info(`‚úÖ SE√ëAL VALIDADA: ${validation.decision} - ${validation.confidence}%`);
            this.logger.info(`üìä Validaciones esta hora: ${this.validationCount}/${this.config.MAX_VALIDATIONS_PER_HOUR}`);

            return validation;

        } catch (error) {
            this.logger.error(`‚ùå Error validando se√±al: ${error.message}`);
            return {
                decision: 'NO_TRADE',
                confidence: 0,
                reasoning: `Error: ${error.message}`
            };
        }
    }

    // üéØ CONVERTIR DECISI√ìN IA A ACCI√ìN DE TRADING
    convertToTradeAction(validation, originalSignal) {
        if (validation.decision === 'NO_TRADE') {
            return null;
        }

        // Mapear decisi√≥n de IA a acci√≥n de trading
        let tradeAction;
        if (validation.decision === 'BUY') {
            tradeAction = 'ENTRAR LONG';
        } else if (validation.decision === 'SELL') {
            tradeAction = 'ENTRAR SHORT';
        } else {
            return null;
        }

        return {
            action: tradeAction,
            confidence: validation.confidence,
            reasoning: `SmartMoney: ${originalSignal.confidence}% + IA Validaci√≥n: ${validation.confidence}%`,
            riskAssessment: validation.risk_assessment,
            expectedMove: validation.expected_move,
            timeHorizon: validation.time_horizon
        };
    }

    // ‚öôÔ∏è CONFIGURACI√ìN
    isEnabled() {
        return this.config.ENABLED;
    }

    enable() {
        this.config.ENABLED = true;
        this.logger.info(`üîç IA VALIDADORA HABILITADA - Doble filtro activado`);
    }

    disable() {
        this.config.ENABLED = false;
        this.logger.info(`üõë IA VALIDADORA DESHABILITADA`);
    }

    getStats() {
        return {
            validationsThisHour: this.validationCount,
            maxValidationsPerHour: this.config.MAX_VALIDATIONS_PER_HOUR,
            minConfidence: this.config.MIN_CONFIDENCE,
            enabled: this.config.ENABLED
        };
    }
}

module.exports = SignalValidatorAI;
